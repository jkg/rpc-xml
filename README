RPC::XML - An implementation of XML-RPC

Version: 0.78

WHAT IS IT

The RPC::XML package is an implementation of XML-RPC. The module provides
classes for sample client and server implementations, a server designed as an
Apache location-handler, and a suite of data-manipulation classes that are
used by them.


USING RPC::XML

There are not any pre-packaged executables in this distribution (except for a
utility tool). Client usage will usually be along the lines of:

    use RPC::XML::Client;
    ...
    my $client = RPC::XML::Client->new(
        'http://www.oreillynet.com/meerkat/xml-rpc/server.php' );
    my $req = RPC::XML::request->new('meerkat.getChannelsBySubstring', 'perl');
    my $res = $client->send_request($req);
    # This returns an object of the RPC::XML::response class. This double-call
    # of value() first gets a RPC::XML::* data object from the response, then
    # the actual data from it:
    my $value = $res->value->value;

Running a simple server is not much more involved:

    use RPC::XML::Server;
    ...
    my $srv = RPC::XML::Server->new( host => 'localhost',
                                     port => 9000 );
    # You would then use $srv->add_method to add some remotely-callable code
    ...
    $srv->accept_loop; # Stays in an accept/connect loop


BUILDING/INSTALLING

This package is set up to configure and build like a typical Perl extension.
To build:

        perl Makefile.PL
        make && make test

If RPC::XML passes all tests, then:

        make install

You may need super-user access to install.


PROBLEMS/BUG REPORTS

Please send any reports of problems or bugs to rjray@blackperl.com


SEE ALSO

XML-RPC:          http://www.xmlrpc.com/spec
The Artistic 2.0: http://www.opensource.org/licenses/artistic-license-2.0.php
The LGPL 2.1:     http://www.opensource.org/licenses/lgpl-2.1.php


CHANGES

* lib/RPC/XML.pm
A patch to loop detection in smart_encode from Dag-Erling
Sm√∏rgrav. Some other minor bits.

* lib/RPC/XML/Procedure.pm
RT #83108: Fixed a spelling error. Some other fixes, too.

* lib/RPC/XML.pm
RT #86187: Force key-ordering in struct as_string and
serialize. Was getting some intermittent bug reports of
failures in t/15_serialize.t that amounted to the keys in a
fault struct not being in consistent order.

* lib/RPC/XML.pm
* t/15_serialize.t
Undo the previous change and fix the test. The previous change
didn't feel right, so this rolls it back and fixes the problem
at the level of the test, instead.

* Makefile.PL
* lib/RPC/XML.pm
* lib/RPC/XML/Client.pm
* lib/RPC/XML/Server.pm
Replace direct evals for loading optional modules with
Module::Load. Required adding this to Makefile.PL because
Module::Load is not core in 5.8.8. Also did some slight doc
tweaking.

* lib/RPC/XML.pm
* lib/RPC/XML/Client.pm
Merge pull request #5 from alexrj/utf8-encode. Use
utf8::encode() instead of utf8::downgrade().

* lib/RPC/XML.pm
* lib/RPC/XML/Client.pm
* lib/RPC/XML/Server.pm
Finish the uft8 encode vs. downgrade change from the previous
commit. Changed in places that were overlooked, and adjusted
the version number in all three modules.

* lib/RPC/XML.pm
* lib/RPC/XML/Parser/XMLLibXML.pm
Merge pull request #6 from dctabuyz/master. Added 'no_blanks'
libxml option to skip blank XML::LibXML::Text nodes.

* lib/RPC/XML/Server.pm
Merge pull request #7 from kvar/master. Initialize $do_compress
in RPC::XML::Server between requests.

* lib/RPC/XML.pm
* lib/RPC/XML/Parser/XMLLibXML.pm
* lib/RPC/XML/Server.pm
Bump version numbers on modules changed in github pulls.
